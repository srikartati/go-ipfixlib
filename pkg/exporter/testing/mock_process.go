// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/srikartati/go-ipfixlib/pkg/exporter (interfaces: ExportingProcess)

// Package testing is a generated GoMock package.
package testing

import (
	gomock "github.com/golang/mock/gomock"
	entities "github.com/srikartati/go-ipfixlib/pkg/entities"
	reflect "reflect"
)

// MockExportingProcess is a mock of ExportingProcess interface
type MockExportingProcess struct {
	ctrl     *gomock.Controller
	recorder *MockExportingProcessMockRecorder
}

// MockExportingProcessMockRecorder is the mock recorder for MockExportingProcess
type MockExportingProcessMockRecorder struct {
	mock *MockExportingProcess
}

// NewMockExportingProcess creates a new mock instance
func NewMockExportingProcess(ctrl *gomock.Controller) *MockExportingProcess {
	mock := &MockExportingProcess{ctrl: ctrl}
	mock.recorder = &MockExportingProcessMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExportingProcess) EXPECT() *MockExportingProcessMockRecorder {
	return m.recorder
}

// AddRecordAndSendMsg mocks base method
func (m *MockExportingProcess) AddRecordAndSendMsg(arg0 entities.ContentType, arg1 entities.Record) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddRecordAndSendMsg", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddRecordAndSendMsg indicates an expected call of AddRecordAndSendMsg
func (mr *MockExportingProcessMockRecorder) AddRecordAndSendMsg(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRecordAndSendMsg", reflect.TypeOf((*MockExportingProcess)(nil).AddRecordAndSendMsg), arg0, arg1)
}

// CloseConnToCollector mocks base method
func (m *MockExportingProcess) CloseConnToCollector() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CloseConnToCollector")
}

// CloseConnToCollector indicates an expected call of CloseConnToCollector
func (mr *MockExportingProcessMockRecorder) CloseConnToCollector() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseConnToCollector", reflect.TypeOf((*MockExportingProcess)(nil).CloseConnToCollector))
}
